version: '3'

services:
  auth:
    container_name: auth
    build:
      context: ./auth/
      target: development
    volumes:
      - ./auth/:/usr/src/app
      - ./auth/node_modules:/usr/src/app/node_modules
    ports:
      - 3011:3011
    command: npm run start:dev
    env_file:
      - ./auth/.env
    networks:
      - async-arch-net
    depends_on:
      - postgres
  todo:
    container_name: todo
    build:
      context: ./todo-svc/
      target: development
    volumes:
      - ./todo-svc/:/usr/src/app
      - ./todo-svc/node_modules:/usr/src/app/node_modules
    ports:
      - 3010:3010
    command: npm run start:dev
    env_file:
      - ./todo-svc/.env
    networks:
      - async-arch-net
    depends_on:
      - postgres
  postgres:
    container_name: pg-db
    image: bitnami/postgresql:latest
    networks:
      - async-arch-net
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 32000:5432
  proxy:
    container_name: proxy
    image: nginx
    volumes:
    - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    ports:
    - "8080:80"
    - 80:5000
    networks:
    - async-arch-net
    environment:
    - NGINX_PORT=80
    depends_on:
    - auth
    - todo
networks:
  async-arch-net:
volumes:
  pgdata: